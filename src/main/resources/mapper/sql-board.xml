<?xml version="1.0" encoding="UTF-8"?>
<!--mybatis SQL 매핑 파일을 뜻하는 지시문 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace속성에 지정한 패키지명을 가지고 있는 파일과 아래의 xml 구문을 연동한다는 의미-->
<!--xml 파일이기 때문에 스프링 프로젝트의 전체 구조를 모르기 때문에 전체 패키지 명을 다 입력해야 함-->
<mapper namespace="com.bitc.board.mapper.BoardMapper">
<!--    실제 sql 쿼리문을 입력하는 부분-->
<!--    id 속성 : 위에서 지정한 파일에 존재하는 메서드 명과 동일하게 입력, 오버로딩 지원하지 않음-->
<!--    resultType : 지정한 메서드의 반환값, 자바 기본 타입은 그대로 입력 가능, 사용자가 지정한 데이터 타입은 xml 파일에서 인식하지 못하기 때문에 전체 패키지명을 다 입력해야 함-->
<!--    parameterType : 지정한 메서드의 매개변수가 가지고 있는 데이터 타입, 자바 기본 타입은 그대로 입력, 사용자가 지정한 데이터 타입은 전체 패키지명을 다 입력해야 함 -->
<!--    변수 선언 : PreparedStatement 방식을 사용하여 지정한 위치에 데이터를 입력하기 위해서 #{변수명} 형태를 사용 -->
<!--    매개변수가 기본 타입일 경우 mapper 파일의 메서드의 변수명을 그대로 사용 가능 -->
<!--    @Param 어노테이션을 사용하여 매개변수의 이름을 지정할 수 있음-->
<!--    매개변수가 사용자 지정 타입일 경우 해당 타입의 멤버 변수명을 그대로 사용 -->
    <select id="selectBoardList" resultType="com.bitc.board.dto.BoardDto">
        <![CDATA[
        SELECT idx, title, user_id, create_dt, hit_cnt FROM t_board
        WHERE deleted_yn = 'N'
        ORDER BY idx DESC
    ]]>
    </select>

    <select id="selectBoardDetail" parameterType="int" resultType="com.bitc.board.dto.BoardDto">
        <![CDATA[
        SELECT idx, title, contents,user_id, create_dt, hit_cnt FROM t_board
        WHERE idx = #{idx}
        ]]>
    </select>

<!--    sql 쿼리문 안에서 컬러명이 각각 달라지는 이유 -->
<!--    1. db에서 사용하는 명명법과 java에서 사용하는 명명법이 다름 -->
<!--    2. application.properties 를 통해서 카멜명명법을 사용한다고 설정 -->
<!--    3. parameterType, resultType에 Java dto class를 사용한다고 설정했기 때문에 해당 클래스의 멤버 변수명을 사용-->
<!--    4. Mapper 파일에서 @Param 어노테이션을 사용하여 변수명을 설정할 경우 해당 변수명을 사용해야 함-->

<!--    useGeneratedKeys : DBMS가 자동 키 생성을 지원할 경우 자동 키 생성을 사용하겠다는 의미 -->
<!--    KeyProperty : 자동으로 생성된 키를 받아서 지정한 컬럼으로 되돌려 줌 -->
    <insert id="insertBoard" parameterType="com.bitc.board.dto.BoardDto" useGeneratedKeys="true" keyProperty="idx">
        <![CDATA[
        INSERT INTO t_board (title, contents, pwd, user_id, create_dt)
        VALUES (#{title}, #{contents}, '1234', #{userId}, NOW())
        ]]>
    </insert>

    <update id="updateBoard" parameterType="com.bitc.board.dto.BoardDto">
        <![CDATA[
        UPDATE t_board
        SET
            title = #{title},
            contents = #{contents},
            update_dt = NOW()
        WHERE
            idx = #{idx}
        ]]>
    </update>

    <update id="deleteBoard" parameterType="int">
        <![CDATA[
        UPDATE t_board
        SET deleted_yn = 'Y'
        WHERE idx = #{idx}
        ]]>
    </update>

    <update id="updateHitCount" parameterType="int">
        <![CDATA[
        UPDATE t_board SET hit_cnt = hit_cnt + 1
        WHERE idx = #{idx}
        ]]>
    </update>

<!--    insertBoardFileList 메서드는 매개변수로 BoardFileDto 클래스 타입의 ArrayList를 받아서 사용함 -->
<!--    해당 리스트가 가지고 있는 모든 내용을 사용하기 위해서 foreach를 사용하여 반복 실행해야 함 -->
<!--    collection : 매개변수로 사용하는 반복가능한 객체의 타입을 설정, list, array 사용 가능-->
<!--    item : collection을 통해서 생성되는 객체 변수명 설정 -->
<!--    separator : 데이터의 구분자 설정, -->
    <insert id="insertBoardFileList" parameterType="com.bitc.board.dto.BoardFileDto">
        <![CDATA[
            INSERT INTO t_file
                (board_idx, original_file_name, stored_file_path, file_size, create_id, create_date)
            VALUES
        ]]>
        <foreach collection="list" item="item" separator=",">
            (#{item.boardIdx}, #{item.originalFileName}, #{item.storedFilePath}, #{item.fileSize}, 'admin', NOW())
        </foreach>
    </insert>

    <select id="selectBoardFileList" resultType="com.bitc.board.dto.BoardFileDto">
        <![CDATA[
            SELECT
                idx, board_idx, original_file_name,
                FORMAT(ROUND(file_size / 1024), 0) AS file_size
            FROM
                t_file
            WHERE
                board_idx = #{boardIdx}
            AND
                deleted_yn = 'N'
        ]]>
    </select>
    
    <select id="selectBoardFileInfo" parameterType="map" resultType="com.bitc.board.dto.BoardFileDto">
        <![CDATA[
            SELECT
                original_file_name, stored_file_path, file_size
            FROM
                t_file
            WHERE
                idx = #{idx}
            AND
                board_idx = #{boardIdx}
            AND
                deleted_yn = 'N'
        ]]>
    </select>

</mapper>
